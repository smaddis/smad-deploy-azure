grafana:
  service:
    type: "LoadBalancer"
  ingress:
    enabled: false
    ingressClassName: ambassador
    path: /grafana/
  grafana.ini: 
   server:
      root_url: "%(protocol)s://%(domain)s:%(http_port)s/grafana/"
      serve_from_sub_path: true
      http_port: 3000
  dashboardProviders:
    dashboardproviders.yaml:
      apiVersion: 1
      providers:
      - name: 'Hono'
        orgId: 1
        folder: 'Hono'
        type: file
        disableDeletion: true
        editable: false
        options:
          path: /etc/secrets/dashboards/
  extraSecretMounts:
    - name: dashboards-secret-mount
      secretName: grafana-hono-dashboards
      defaultMode: 0440
      mountPath: /etc/secrets/dashboards
      readOnly: true
prometheusOperator:
  service:
    type: "LoadBalancer"
prometheus:
  service:
    type: "LoadBalancer"
  prometheusSpec:
    # https://github.com/prometheus-operator/prometheus-operator/blob/3d7e074097abed637c0a8531e285b518da48e7df/Documentation/api.md#remotereadspec
    remoteRead:
    - url: "http://influx-influxdb:8086/api/v1/prom/read?db=monitoring_data&u=readuser&p=password"
    # https://github.com/prometheus-operator/prometheus-operator/blob/3d7e074097abed637c0a8531e285b518da48e7df/Documentation/api.md#remotewritespec
    remoteWrite:
    - url: "http://influx-influxdb:8086/api/v1/prom/write?db=monitoring_data&u=writeuser&p=password"
    additionalScrapeConfigs:
      - job_name: hono-pods
        honor_timestamps: true
        scrape_interval: 10s
        scrape_timeout: 10s
        metrics_path: /metrics
        scheme: https
        kubernetes_sd_configs:
        - role: pod
          namespaces:
            names:
            - default
          selectors:
          - role: pod
            label: app.kubernetes.io/instance=hono,helm.sh/chart=hono-1.10.14
        tls_config:
          insecure_skip_verify: true
        # https://github.com/eclipse/packages/blob/9f514b9dfd6734dfb196ba8c6b1151a431bbfd7b/charts/hono/templates/_helpers.tpl#L123-L130
        relabel_configs:
        - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
          separator: ;
          regex: "true"
          replacement: $1
          action: keep
        - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
          separator: ;
          regex: (.+)
          target_label: __metrics_path__
          replacement: $1
          action: replace
        - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
          separator: ;
          regex: ([^:]+)(?::\d+)?;(\d+)
          target_label: __address__
          replacement: $1:$2
          action: replace
        - separator: ;
          regex: __meta_kubernetes_pod_label_(.+)
          replacement: $1
          action: labelmap
        - source_labels: [__meta_kubernetes_namespace]
          separator: ;
          regex: (.*)
          target_label: kubernetes_namespace
          replacement: $1
          action: replace
        - source_labels: [__meta_kubernetes_pod_name]
          separator: ;
          regex: (.*)
          target_label: kubernetes_pod_name
          replacement: $1
          action: replace