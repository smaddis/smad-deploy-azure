livenessProbe:
  initialDelaySeconds: 700
readinessProbe:
  initialDelaySeconds: 200
logsDirs: /bitnami/kafka/data2
logFlushIntervalMs: 500
logRetentionCheckIntervalMs: 30000
logRetentionHours: 2
persistence:
  existingClaim: "kafkapvc"
  size: 5Gi
zookeeper:
  persistence:
    existingClaim: "zookeeperpvc"
    size: 5Gi
  auth:
    enabled: true
    clientUser: zookeeperUser
    clientPassword: zookeeperPassword
    serverUsers: zookeeperUser
    serverPasswords: zookeeperPassword
externalAccess:
  enabled: false
  service:
    type: LoadBalancer
    ports:
      external: 9094
    nodePorts:
      - 32092
  autoDiscovery:
    enabled: true
serviceAccount:
  create: true
rbac:
  create: true
nameOverride: kafka
service:
  ports:
    client: 9092
    internal: 9093
    external: 9094
auth:
  clientProtocol: sasl
  interBrokerProtocol: sasl
  sasl:
    jaas:
      clientUsers:
        - "hono"
      clientPasswords:
        - "hono-secret"
      zookeeperUser: zookeeperUser
      zookeeperPassword: zookeeperPassword

extraDeploy:
  - |
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      name: kafka-connect
      labels: {{- include "common.labels.standard" . | nindent 4 }}
        app.kubernetes.io/component: connector
    spec:
      replicas: 1
      selector:
        matchLabels: {{- include "common.labels.matchLabels" . | nindent 6 }}
          app.kubernetes.io/component: connector
      template:
        metadata:
          labels: {{- include "common.labels.standard" . | nindent 8 }}
            app.kubernetes.io/component: connector
        spec:
          containers:
            - name: connect
              image: ghcr.io/smaddis/kafka-connect-mongo:1.6.1
              imagePullPolicy: IfNotPresent
              command:
                - /bin/bash
                - -ec
                - |
                  /opt/bitnami/kafka/bin/connect-standalone.sh /opt/bitnami/kafka/config/connect-standalone.properties /opt/bitnami/kafka/config/mongodb.properties
              ports:
                - name: connector
                  containerPort: 8083
              volumeMounts:
                - name: configuration
                  mountPath: /bitnami/kafka/config
          volumes:
            - name: configuration
              configMap:
                name: kafka-connect
  - |
    apiVersion: v1
    kind: ConfigMap
    metadata:
      name: kafka-connect
      labels: {{- include "common.labels.standard" . | nindent 4 }}
        app.kubernetes.io/component: connector
    data:
      connect-standalone.properties: |-
        bootstrap.servers=kafka-0.kafka-headless.default.svc.cluster.local:{{ .Values.service.port }}
        key.converter=org.apache.kafka.connect.json.JsonConverter
        value.converter=org.apache.kafka.connect.json.JsonConverter
        key.converter.schemas.enable=true
        value.converter.schemas.enable=true
        offset.storage.file.filename=/tmp/connect.offsets
        offset.flush.interval.ms=10000
        plugin.path=/opt/bitnami/kafka/plugins
        sasl.mechanism=SCRAM-SHA-512
        security.protocol=SASL_PLAINTEXT
        sasl.jaas.config=org.apache.kafka.common.security.scram.ScramLoginModule  required \
          username="hono" \
          password="hono-secret";
        consumer.sasl.mechanism=SCRAM-SHA-512
        consumer.security.protocol=SASL_PLAINTEXT
        consumer.sasl.jaas.config=org.apache.kafka.common.security.scram.ScramLoginModule  required \
          username="hono" \
          password="hono-secret";
        producer.sasl.mechanism=SCRAM-SHA-512
        producer.security.protocol=SASL_PLAINTEXT
        producer.sasl.jaas.config=org.apache.kafka.common.security.scram.ScramLoginModule  required \
          username="hono" \
          password="hono-secret";
      mongodb.properties: |-
        connection.uri=mongodb://hono:hono-secret@mongodb.default.svc.cluster.local:28018/mongo-telemetry
        name=mongo-sink
        topics=.
        connector.class=com.mongodb.kafka.connect.MongoSinkConnector
        tasks.max=1
        key.converter=org.apache.kafka.connect.json.JsonConverter
        value.converter=org.apache.kafka.connect.json.JsonConverter
        key.converter.schemas.enable=false
        value.converter.schemas.enable=false
        database=telemetry
        collection=sink
  - |
    apiVersion: v1
    kind: Service
    metadata:
      name: kafka-connect
      labels: {{- include "common.labels.standard" . | nindent 4 }}
        app.kubernetes.io/component: connector
    spec:
      ports:
        - protocol: TCP
          port: 8083
          targetPort: connector
      selector: {{- include "common.labels.matchLabels" . | nindent 4 }}
        app.kubernetes.io/component: connector
