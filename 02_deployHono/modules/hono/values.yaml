prometheus:
  createInstance: false
jaegerBackendExample:
  enabled: false
jaegerAgentConf:
  REPORTER_GRPC_HOST_PORT: "jaeger-operator-jaeger-collector:14250"
grafana:
  enabled: false
mongodb:
  createInstance: false
deviceRegistryExample:
  type: "mongodb"
  addExampleData: false
  mongoDBBasedDeviceRegistry:
    mongodb:
      host: "mongodb"
      port: 27017
      dbName: "honodb"
adapters:
  http:
    enabled: false
messagingNetworkTypes:
  - kafka
kafka:
  livenessProbe:
    initialDelaySeconds: 300
  readinessProbe:
    initialDelaySeconds: 10
  persistence:
    existingClaim: "kafkapvc"
    size: 5Gi
  zookeeper:
    persistence:
      existingClaim: "zookeeperpvc"
      size: 5Gi
  auth:
    clientProtocol: sasl
    interBrokerProtocol: plaintext
    jaas:
      clientUser: hono
      clientPassword: hono-secret
    extraDeploy: |-
      - apiVersion: apps/v1
        kind: Deployment
        metadata:
          name: {{ include "kafka.fullname" . }}-connect
          labels: {{- include "kafka.labels" . | nindent 6 }}
            app.kubernetes.io/component: connector
        spec:
          replicas: 1
          selector:
            matchLabels: {{- include "kafka.matchLabels" . | nindent 8 }}
              app.kubernetes.io/component: connector
          template:
            metadata:
              labels: {{- include "kafka.labels" . | nindent 10 }}
                app.kubernetes.io/component: connector
            spec:
              containers:
                - name: connect
                  image: nindemic/mongokafkaconnect:1.0 
                  imagePullPolicy: IfNotPresent
                  command:
                    - /bin/bash
                    - -ec
                    - |
                      /opt/bitnami/kafka/bin/connect-standalone.sh /config/connect-standalone.properties /config/mongodb.properties
                  ports:
                    - name: connector
                      containerPort: 8083
                  volumeMounts:
                    - name: configuration
                      mountPath: /config
              volumes:
                - name: configuration
                  configMap:
                    name: {{ include "kafka.fullname" . }}-connect
      - apiVersion: v1
        kind: ConfigMap
        metadata:
          name: {{ include "kafka.fullname" . }}-connect
          labels: {{- include "kafka.labels" . | nindent 6 }}
            app.kubernetes.io/component: connector
        data:
          connect-standalone.properties: |-
            bootstrap.servers = {{ include "kafka.fullname" . }}-0.{{ include "kafka.fullname" . }}-headless.{{ .Release.Namespace }}.svc.{{ .Values.clusterDomain }}:{{ .Values.service.port }}
            key.converter=org.apache.kafka.connect.json.JsonConverter
            value.converter=org.apache.kafka.connect.json.JsonConverter
            key.converter.schemas.enable=true
            value.converter.schemas.enable=true
            offset.storage.file.filename=/tmp/connect.offsets
            offset.flush.interval.ms=10000
            plugin.path=/opt/bitnami/kafka/plugins
            sasl.mechanism=PLAIN
            security.protocol=SASL_PLAINTEXT
            sasl.jaas.config=org.apache.kafka.common.security.plain.PlainLoginModule required \
              username="hono" \
              password="hono-secret";
            consumer.sasl.mechanism=PLAIN
            consumer.security.protocol=SASL_PLAINTEXT
            consumer.sasl.jaas.config=org.apache.kafka.common.security.plain.PlainLoginModule required \
              username="hono" \
              password="hono-secret";
          mongodb.properties: |-
            connection.uri=mongodb://user:root@mongodb.default.svc.cluster.local:28018/mongo-telemetry
            name=mongo-sink
            topics=mytopic
            connector.class=com.mongodb.kafka.connect.MongoSinkConnector
            tasks.max=1
            key.converter=org.apache.kafka.connect.json.JsonConverter
            value.converter=org.apache.kafka.connect.json.JsonConverter
            key.converter.schemas.enable=false
            value.converter.schemas.enable=false
            database=mydb
            collection=sink
      - apiVersion: v1
        kind: Service
        metadata:
          name: {{ include "kafka.fullname" . }}-connect
          labels: {{- include "kafka.labels" . | nindent 6 }}
            app.kubernetes.io/component: connector
        spec:
          ports:
            - protocol: TCP
              port: 8083
              targetPort: connector
          selector: {{- include "kafka.matchLabels" . | nindent 6 }}
            app.kubernetes.io/component: connector