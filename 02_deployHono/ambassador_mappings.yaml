apiVersion: getambassador.io/v2
kind:  TCPMapping
metadata:
  name: hono-mqtt-adapter
spec:
  port: 1883
  #host: ${domain}
  service: hono-adapter-mqtt-vertx:1883
---
apiVersion: getambassador.io/v2
kind:  TCPMapping
metadata:
  name: secure-hono-mqtt-adapter
spec:
  port: 8883
  #host: ${domain}
  service: hono-adapter-mqtt-vertx:8883
---
apiVersion: getambassador.io/v2
kind:  TCPMapping
metadata:
  name: hono-device-registry
spec:
  port: 28080
  #host: ${domain}
  service: hono-service-device-registry-ext:28080
---
apiVersion: getambassador.io/v2
kind:  TCPMapping
metadata:
  name: hono-dispatch-router
spec:
  port: 15671
  service: hono-service-device-registry-ext:15671
---
apiVersion: getambassador.io/v2
kind:  TCPMapping
metadata:
  name: hono-kafka-external
spec:
  port: 9092
  #host: ${domain}
  service: hono-kafka-0-external:9092
---
apiVersion: getambassador.io/v2
kind:  Mapping
metadata:
  name: prometheus-grafana
spec:
  #port: 80
  prefix: /grafana/
  host: ${domain}
  service: prometheus-grafana:80
---
apiVersion: getambassador.io/v2
kind:  TCPMapping
metadata:
  name: prometheus-grafana-tcp
spec:
  port: 3000
  prefix: /grafana/
  host: ${domain}
  service: prometheus-grafana:3000
---
apiVersion: getambassador.io/v2
kind:  Mapping
metadata:
  name: jaeger-operator-jaeger-query
spec:
  port: 80
  prefix: /jaeger
  rewrite: /jaeger
  #host_redirect: true
  host: ${domain}
  service: jaeger-operator-jaeger-query:16686
---
apiVersion: getambassador.io/v2
kind:  TCPMapping
metadata:
  name: jaeger-operator-jaeger-query-tcp
spec:
  port: 16686
  #prefix: /jaeger/
  #host: ${domain}
  service: jaeger-operator-jaeger-query:16686
---
apiVersion: getambassador.io/v2
kind: Mapping
metadata:
  name: acme-challenge-mapping
spec:
  prefix: /.well-known/acme-challenge/
  rewrite: ""
  service: acme-challenge-service
---
apiVersion: getambassador.io/v2
kind: Mapping
metadata:
  name: hono-device-registry-mapping
spec:
  #port: 80
  prefix: /registry
  host: ${domain}
  service: hono-service-device-registry-ext:28080
---
apiVersion: getambassador.io/v2
kind: TLSContext
metadata:
  name: ambassador-tls-terminator
spec:
  hosts:
  - ${domain}
  secret: ambassador-certs
---
apiVersion: v1
kind: Service
metadata:
  name: acme-challenge-service
spec:
  ports:
  - port: 80
    targetPort: 8089
  selector:
    acme.cert-manager.io/http01-solver: "true"
